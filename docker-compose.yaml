services:
  http11:
    image: mnvkd
    build:
      context: .
    ports:
      - "8081:8081"
    cap_add:
      - SYS_PTRACE
    environment:
      VK_POLL_DRIVER: OS
      VK_POLL_METHOD: EDGE_TRIGGERED
    cpuset: "0"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  http11d:
    image: mnvkd
    build:
      context: .
    command:
      - "/vk_test_http11_service.debug"
    ports:
      - "8082:8082"
    cap_add:
      - SYS_PTRACE
    environment:
      VK_POLL_DRIVER: OS
      VK_POLL_METHOD: EDGE_TRIGGERED
    cpuset: "0"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpexpress:
    image: expresshw
    build:
      context: .
      dockerfile: Dockerfile.express
    ports:
      - "8083:3000"
    cpuset: "0"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpunit:
    image: unithw
    build:
      context: .
      dockerfile: Dockerfile.unit
    ports:
      - "8084:8080"
    cpuset: "0"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  http11-test30:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=30"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/http11-test30.json"
      - "-qps=0"
      - "http://http11:8081/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      http11:
        condition: service_started
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpexpress-test30:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=30"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/httpexpress-test30.json"
      - "-qps=0"
      - "http://httpexpress:3000/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      http11-test30:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpunit-test30:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=30"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/httpunit-test30.json"
      - "-qps=0"
      - "http://httpunit:8080/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      httpexpress-test30:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  http11-test1k:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=1000"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/http11-test1k.json"
      - "-qps=0"
      - "http://http11:8081/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      httpunit-test30:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpexpress-test1k:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=1000"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/httpexpress-test1k.json"
      - "-qps=0"
      - "http://httpexpress:3000/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      http11-test1k:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpunit-test1k:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=1000"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/httpunit-test1k.json"
      - "-qps=0"
      - "http://httpunit:8080/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      httpexpress-test1k:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  http11-test10k:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=10000"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/http11-test10k.json"
      - "-qps=0"
      - "http://http11:8081/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      httpunit-test1k:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpexpress-test10k:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=10000"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/httpexpress-test10k.json"
      - "-qps=0"
      - "http://httpexpress:3000/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      http11-test10k:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  httpunit-test10k:
    image: fortio/fortio
    command:
      - "load"
      - "-t=30s"
      - "-c=10000"
      - "-timeout=60s"
      - "-r=0.0001"
      - "-json=/var/testresults/httpunit-test10k.json"
      - "-qps=0"
      - "http://httpunit:8080/"
    volumes:
      - "testresults:/var/testresults"
    depends_on:
      httpexpress-test10k:
        condition: service_completed_successfully
    cpuset: "1"
    ulimits:
      nofile: 65536
    mem_limit: 4G
    deploy:
      resources:
        limits:
          memory: 4G
  testresults:
    image: fortio/fortio
    command:
      - "report"
      - "-data-dir=/var/testresults"
    volumes:
      - "testresults:/var/testresults"
    ports:
      - "8085:8080"
    depends_on:
      http11:
        condition: service_started

volumes:
  testresults: